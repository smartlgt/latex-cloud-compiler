name: Rust

on:
  push:
    tags:
    - 'v*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            artifact_name: latex-proxy
            asset_name: x86_64-unknown-linux-gnu
          - target: armv7-unknown-linux-gnueabihf
            artifact_name: latex-proxy
            asset_name: armv7-unknown-linux
          - target: powerpc64-unknown-linux-gnu
            artifact_name: latex-proxy
            asset_name: powerpc64-unknown-linux
          - target: x86_64-pc-windows-gnu
            artifact_name: latex-proxy.exe
            asset_name: x86_64-pc-windows

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - name: Install OpenSSL (x86)
        if: matrix.target == 'x86_64-unknown-linux-gnu'
        run: |
          sudo apt-get install -y libssl-dev
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
